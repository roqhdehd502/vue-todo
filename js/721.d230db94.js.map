{"version":3,"file":"js/721.d230db94.js","mappings":"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","sources":["webpack://vue-mini-project/./src/common/messages.js","webpack://vue-mini-project/./src/views/auth/SignUpAuth.vue","webpack://vue-mini-project/./src/views/auth/SignUpAuth.vue?8765"],"sourcesContent":["export const authMessages =\r\n{\r\n  SUCCESS_LOGOUT :\r\n  { \r\n    message: '로그아웃 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_CREATE_USER_INFO :\r\n  { \r\n    message: '성공적으로 등록 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_UPDATE_USER_INFO :\r\n  { \r\n    message: '성공적으로 변경 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_SEND_USER_EMAIL_VERIFY :\r\n  { \r\n    message: '인증 메시지를 전송 하였습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  INVALID_ACCESS :\r\n  { \r\n    message: '올바르지 않은 접근입니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  INVALID_USER_INFO :\r\n  { \r\n    message: '올바르지 않은 계정입니다!', \r\n    type: 'warning' \r\n  },\r\n\r\n  INVALID_CREATE_USER_INFO :\r\n  { \r\n    message: '등록할 계정 정보를 다시 입력해주세요!', \r\n    type: 'warning' \r\n  },\r\n\r\n  INVALID_UPLOAD_USER_IMAGE_INFO :\r\n  { \r\n    message: '유저 프로필 이미지를 업로드 할 수 없습니다!', \r\n    type: 'warning' \r\n  },\r\n\r\n  FAILED_LOGOUT :\r\n  { \r\n    message: '오류로 인해 로그아웃 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_USER_INFO :\r\n  { \r\n    message: '오류로 인해 회원 정보를 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_UPDATE_USER_INFO :\r\n  { \r\n    message: '오류로 인해 회원 정보를 변경 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n  \r\n  FAILED_SEND_USER_EMAIL_VERIFY :\r\n  { \r\n    message: '오류로 인해 인증 메시지를 전송 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_DELETE_USER_INFO :\r\n  {\r\n    message: '오류로 인해 회원 정보를 삭제 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n};\r\n\r\n\r\n\r\nexport const coinMessages =\r\n{\r\n  FAILED_COINS_INFO :\r\n  { \r\n    message: '오류로 인해 코인 정보들을 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n};\r\n\r\n\r\n\r\nexport const todoMessages =\r\n{\r\n  SUCCESS_UPDATE_TODO_INFO :\r\n  { \r\n    message: '성공적으로 변경 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_DELETE_TODO_INFO :\r\n  { \r\n    message: '성공적으로 삭제 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  INVALID_TODO_INFO :\r\n  { \r\n    message: '올바른 할 일의 내용을 입력해주세요!', \r\n    type: 'warning' \r\n  },\r\n\r\n  INVALID_UPDATE_TODO_INFO :\r\n  { \r\n    message: '올바른 할 일의 내용을 수정해주세요!', \r\n    type: 'warning' \r\n  },\r\n\r\n  FAILED_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 작성한 할 일 정보를 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_TODOS_INFO :\r\n  { \r\n    message: '오류로 인해 작성한 할 일 정보들을 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_CREATE_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 작성 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_UPDATE_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 변경 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_DELETE_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 삭제 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n};","<template> \r\n    <div class=\"container container-style\"> \r\n        <div class=\"row\">\r\n            <router-link :to=\"{ name: 'TodosList' }\" class=\"router-link-style\">\r\n                <h1 class=\"h1-style\">\r\n                    Coin Todos\r\n                </h1>\r\n            </router-link>\r\n            <div class=\"card card-style\">\r\n                <div class=\"container justify-content-center\">\r\n                    <div class=\"row\">\r\n                        <div class=\"input-group input-group-lg mb-3\">\r\n                          <input \r\n                            v-model=\"userId\"\r\n                            type=\"text\" \r\n                            class=\"form-control\" \r\n                            placeholder=\"등록할 아이디 입력\"\r\n                            required\r\n                          />\r\n                          <span class=\"input-group-text\">\r\n                            @\r\n                          </span>\r\n                          <select \r\n                            v-if=\"!isDirectInputEmail\"\r\n                            v-model=\"userEmail\"\r\n                            @change=\"selectDirect(userEmail)\"\r\n                            class=\"form-select\" \r\n                          >\r\n                            <option selected>naver.com</option>\r\n                            <option value=\"daum.net\">daum.net</option>\r\n                            <option value=\"gmail.com\">gmail.com</option>\r\n                            <option value=\"hanmail.net\">hanmail.net</option>\r\n                            <option value=\"kakao.com\">kakao.com</option>\r\n                            <option value=\"nate.com\">nate.com</option>\r\n                            <option value=\"outlook.com\">outlook.com</option>\r\n                            <option value=\"tistory.com\">tistory.com</option>\r\n                            <option value=\"yahoo.com\">yahoo.com</option>\r\n                            <option value=\"direct\">직접입력</option>\r\n                          </select>\r\n                          <input \r\n                            v-else\r\n                            v-model=\"userEmail\"\r\n                            type=\"text\" \r\n                            class=\"form-control\" \r\n                            placeholder=\"등록할 이메일 입력\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div class=\"input-group input-group-lg mb-3\">\r\n                            <input \r\n                              v-model=\"userPassword\"\r\n                              @input=\"passwordStrength(userPassword)\" \r\n                              type=\"password\"\r\n                              class=\"form-control\" \r\n                              placeholder=\"등록할 비밀번호를 입력\"\r\n                              required\r\n                            >\r\n                        </div>\r\n                        <div v-if=\"userPassword\" class=\"input-group input-group-lg mb-2\">\r\n                          <div class=\"card card-body\">\r\n                            <h6>{{ userPasswordFeedback }}</h6>\r\n                            <ul class=\"list-group list-group-flush\">\r\n                              <li class=\"list-group-item\">- 패스워드 길이가 12자 이상</li>\r\n                              <li class=\"list-group-item\">- 대문자, 기호, 숫자를 포함한 텍스트</li>\r\n                            </ul>\r\n                            <div class=\"progress\">\r\n                              <div \r\n                                class=\"progress-bar\"\r\n                                :class=\"passwordStrengthLevel\" \r\n                                style=\"width: 100%\"\r\n                                aria-valuenow=\"100\" \r\n                                aria-valuemin=\"0\" \r\n                                aria-valuemax=\"100\"\r\n                              ></div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"input-group input-group-lg mb-3\">\r\n                            <input \r\n                              v-model=\"verifiedPassword\"\r\n                              @input=\"passwordVerified(verifiedPassword)\" \r\n                              type=\"password\"\r\n                              class=\"form-control\" \r\n                              placeholder=\"비밀번호 확인\"\r\n                              required\r\n                            >\r\n                            <div class=\"valid-tooltip\">\r\n                              Looks good!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-grid\">\r\n                        <button \r\n                          @click=\"signInSubmit(userId, userEmail, userPassword, isSafetyPassword, isVerifiedPassword)\" \r\n                          type=\"button\" \r\n                          class=\"btn btn-success btn-lg\"\r\n                        >\r\n                            회원가입\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"extra-style\">\r\n                <router-link to=\"/login\">로그인</router-link>\r\n            </div>\r\n            <div class=\"extra-style g-3\">\r\n              <router-link to=\"/\">메인 페이지로 돌아가기</router-link>\r\n            </div>\r\n        </div> \r\n    </div> \r\n</template> \r\n\r\n\r\n\r\n<script> \r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport router from '@/router';\r\n\r\nimport { authMessages } from '@/common/messages';\r\n\r\n\r\nexport default { \r\n    name: 'SignUpAuth',\r\n\r\n    setup() {\r\n      const store = useStore();\r\n\r\n      const userId = ref('');\r\n      const userEmail = ref('naver.com');\r\n      const isDirectInputEmail = ref(false);\r\n      const userPassword = ref('');\r\n      const isSafetyPassword = ref(false);\r\n      const userPasswordFeedback = ref('');\r\n      const passwordStrengthLevel = ref('');\r\n      const verifiedPassword = ref('');\r\n      const isVerifiedPassword = ref(false);\r\n\r\n      const selectDirect = (directInput) => {\r\n        switch(directInput) {\r\n          case \"direct\":\r\n            isDirectInputEmail.value = true;\r\n            break;\r\n\r\n          default:\r\n            isDirectInputEmail.value = false;\r\n        }\r\n      }\r\n\r\n      const passwordStrength = (passwordInput) => {\r\n        let strongRegex = new RegExp(\"^(?=.{12,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$\", \"g\");\r\n        let mediumRegex = new RegExp(\"^(?=.{10,})(((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[0-9]))).*$\", \"g\");\r\n        let enoughRegex = new RegExp(\"(?=.{8,}).*\", \"g\");\r\n\r\n        if (passwordInput.length == 0) {\r\n            userPasswordFeedback.value = '패스워드를 입력하세요.';\r\n            passwordStrengthLevel.value = 'bg-danger';\r\n        } else if (false == enoughRegex.test(passwordInput)) {\r\n            userPasswordFeedback.value = '패스워드가 8글자를 넘어야 합니다.';\r\n            passwordStrengthLevel.value = 'bg-danger';\r\n        } else if (strongRegex.test(passwordInput)) {\r\n            userPasswordFeedback.value = '안전합니다!';\r\n            isSafetyPassword.value = true;\r\n            passwordStrengthLevel.value = 'bg-success';\r\n        } else if (mediumRegex.test(passwordInput)) {\r\n            userPasswordFeedback.value = '권장하지 않습니다!';\r\n            isSafetyPassword.value = true;\r\n            passwordStrengthLevel.value = 'bg-warning';\r\n        } else {\r\n            userPasswordFeedback.value = '위험합니다!';\r\n            passwordStrengthLevel.value = 'bg-danger';\r\n        }\r\n      }\r\n\r\n      const passwordVerified = (verifiedPasswordInput) => {\r\n        if (verifiedPasswordInput !== userPassword.value) {\r\n          isVerifiedPassword.value = false;\r\n        } else {\r\n          isVerifiedPassword.value = true;\r\n        }\r\n      }\r\n      \r\n      const signInSubmit = (userId, userEmail, userPassword, isSafetyPassword, isVerifiedPassword) => {\r\n        if (userId === '' \r\n          || userEmail === '' \r\n          || userPassword === ''\r\n          || !isSafetyPassword\r\n          || !isVerifiedPassword) {\r\n          store.dispatch('toast/triggerToast', authMessages.INVALID_CREATE_USER_INFO);\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const signUpEmail = `${userId}@${userEmail}`;\r\n          store.dispatch('usersInfo/userSignUp', {signUpEmail, userPassword});\r\n          store.dispatch('toast/triggerToast', authMessages.SUCCESS_CREATE_USER_INFO);\r\n          router.replace('/');\r\n        } catch (error) {\r\n          store.dispatch('toast/triggerToast', authMessages.INVALID_CREATE_USER_INFO);\r\n        }\r\n      };\r\n\r\n      return {\r\n          userId,\r\n          userEmail,\r\n          isDirectInputEmail,\r\n          userPassword,\r\n          isSafetyPassword,\r\n          userPasswordFeedback,\r\n          passwordStrengthLevel,\r\n          verifiedPassword,\r\n          isVerifiedPassword,\r\n          \r\n          selectDirect,\r\n          passwordStrength,\r\n          passwordVerified,\r\n          signInSubmit,\r\n      }\r\n    }\r\n}; \r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.container-style {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 75vh;\r\n}\r\n\r\n.router-link-style {\r\n    color: black;\r\n    text-decoration: none;\r\n}\r\n\r\n.h1-style {\r\n    text-align: center;\r\n    font-weight: 900;\r\n    margin-bottom: 50px;\r\n}\r\n\r\n.card-style {\r\n    padding: 50px 0px 50px 0px;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.btn-style {\r\n    width: auto !important;\r\n}\r\n\r\n.extra-style {\r\n    text-align: center;\r\n}\r\n\r\n.extra-style a {\r\n    text-decoration: none;\r\n    color: black;\r\n}\r\n\r\n.extra-style a:hover {\r\n    color: green;\r\n}\r\n</style>","import { render } from \"./SignUpAuth.vue?vue&type=template&id=6d1f50e3&scoped=true\"\nimport script from \"./SignUpAuth.vue?vue&type=script&lang=js\"\nexport * from \"./SignUpAuth.vue?vue&type=script&lang=js\"\n\nimport \"./SignUpAuth.vue?vue&type=style&index=0&id=6d1f50e3&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Others\\\\Programming\\\\Project Space\\\\vue-todo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6d1f50e3\"]])\n\nexport default __exports__"],"names":["authMessages","SUCCESS_LOGOUT","message","type","SUCCESS_CREATE_USER_INFO","SUCCESS_UPDATE_USER_INFO","SUCCESS_SEND_USER_EMAIL_VERIFY","INVALID_ACCESS","INVALID_USER_INFO","INVALID_CREATE_USER_INFO","INVALID_UPLOAD_USER_IMAGE_INFO","FAILED_LOGOUT","FAILED_USER_INFO","FAILED_UPDATE_USER_INFO","FAILED_SEND_USER_EMAIL_VERIFY","FAILED_DELETE_USER_INFO","coinMessages","FAILED_COINS_INFO","todoMessages","SUCCESS_UPDATE_TODO_INFO","SUCCESS_DELETE_TODO_INFO","INVALID_TODO_INFO","INVALID_UPDATE_TODO_INFO","FAILED_TODO_INFO","FAILED_TODOS_INFO","FAILED_CREATE_TODO_INFO","FAILED_UPDATE_TODO_INFO","FAILED_DELETE_TODO_INFO","class","_createElementVNode","_hoisted_9","_createElementBlock","_createVNode","_component_router_link","to","name","_hoisted_3","$setup","$event","placeholder","required","_hoisted_8","onChange","onInput","_toDisplayString","_hoisted_23","style","_hoisted_26","onClick","setup","store","useStore","userId","ref","userEmail","isDirectInputEmail","userPassword","isSafetyPassword","userPasswordFeedback","passwordStrengthLevel","verifiedPassword","isVerifiedPassword","selectDirect","directInput","value","passwordStrength","passwordInput","strongRegex","RegExp","mediumRegex","enoughRegex","length","test","passwordVerified","verifiedPasswordInput","signInSubmit","signUpEmail","dispatch","router","error","__exports__","render"],"sourceRoot":""}