{"version":3,"file":"js/911.33aacd9f.js","mappings":"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","sources":["webpack://vue-mini-project/./src/common/messages.js","webpack://vue-mini-project/./src/remote/auth.js","webpack://vue-mini-project/./src/views/auth/LoginAuth.vue","webpack://vue-mini-project/./src/views/auth/LoginAuth.vue?261b"],"sourcesContent":["export const authMessages =\r\n{\r\n  SUCCESS_LOGOUT :\r\n  { \r\n    message: '로그아웃 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_CREATE_USER_INFO :\r\n  { \r\n    message: '성공적으로 등록 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_UPDATE_USER_INFO :\r\n  { \r\n    message: '성공적으로 변경 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_SEND_USER_EMAIL_VERIFY :\r\n  { \r\n    message: '인증 메시지를 전송 하였습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  INVALID_ACCESS :\r\n  { \r\n    message: '올바르지 않은 접근입니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  INVALID_USER_INFO :\r\n  { \r\n    message: '올바르지 않은 계정입니다!', \r\n    type: 'warning' \r\n  },\r\n\r\n  INVALID_CREATE_USER_INFO :\r\n  { \r\n    message: '등록할 계정 정보를 다시 입력해주세요!', \r\n    type: 'warning' \r\n  },\r\n\r\n  INVALID_UPLOAD_USER_IMAGE_INFO :\r\n  { \r\n    message: '유저 프로필 이미지를 업로드 할 수 없습니다!', \r\n    type: 'warning' \r\n  },\r\n\r\n  FAILED_LOGOUT :\r\n  { \r\n    message: '오류로 인해 로그아웃 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_USER_INFO :\r\n  { \r\n    message: '오류로 인해 회원 정보를 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_UPDATE_USER_INFO :\r\n  { \r\n    message: '오류로 인해 회원 정보를 변경 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n  \r\n  FAILED_SEND_USER_EMAIL_VERIFY :\r\n  { \r\n    message: '오류로 인해 인증 메시지를 전송 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_DELETE_USER_INFO :\r\n  {\r\n    message: '오류로 인해 회원 정보를 삭제 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n};\r\n\r\n\r\n\r\nexport const coinMessages =\r\n{\r\n  FAILED_COINS_INFO :\r\n  { \r\n    message: '오류로 인해 코인 정보들을 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n};\r\n\r\n\r\n\r\nexport const todoMessages =\r\n{\r\n  SUCCESS_UPDATE_TODO_INFO :\r\n  { \r\n    message: '성공적으로 변경 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  SUCCESS_DELETE_TODO_INFO :\r\n  { \r\n    message: '성공적으로 삭제 되었습니다.', \r\n    type: 'success' \r\n  },\r\n\r\n  INVALID_TODO_INFO :\r\n  { \r\n    message: '올바른 할 일의 내용을 입력해주세요!', \r\n    type: 'warning' \r\n  },\r\n\r\n  INVALID_UPDATE_TODO_INFO :\r\n  { \r\n    message: '올바른 할 일의 내용을 수정해주세요!', \r\n    type: 'warning' \r\n  },\r\n\r\n  FAILED_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 작성한 할 일 정보를 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_TODOS_INFO :\r\n  { \r\n    message: '오류로 인해 작성한 할 일 정보들을 불러올 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_CREATE_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 작성 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_UPDATE_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 변경 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n\r\n  FAILED_DELETE_TODO_INFO :\r\n  { \r\n    message: '오류로 인해 삭제 할 수 없습니다!', \r\n    type: 'danger' \r\n  },\r\n};","import { \r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n  updateProfile,\r\n  sendEmailVerification,\r\n  deleteUser,\r\n} from \"firebase/auth\";\r\n\r\nimport * as firebaseStorage from \"firebase/storage\";\r\n\r\n\r\n\r\nexport const triggerLogin = (userEmail, userPassword) => {\r\n  signInWithEmailAndPassword(getAuth(), userEmail, userPassword)\r\n    .then(() => {\r\n      console.log(\"LOGIN SUCCESS.\");\r\n    })\r\n    .catch(() => {\r\n      console.log(\"LOGIN FAILED!\");\r\n    });\r\n}\r\n\r\n\r\nexport const getUserInfo = () => {\r\n  return getAuth().currentUser;\r\n}\r\n\r\n\r\nexport const createUserInfo = (userEmail, userPassword) => {\r\n  createUserWithEmailAndPassword(getAuth(), userEmail, userPassword)\r\n    .then(() => {\r\n      console.log(\"SIGN UP SUCCESS.\");\r\n    })\r\n    .catch(() => {\r\n      console.log(\"SIGN UP FAILED!\");\r\n    }); \r\n}\r\n\r\n\r\nexport const signOutUserInfo = () => {\r\n  signOut(getAuth())\r\n    .then(() => {\r\n      console.log(\"LOGOUT SUCCESS.\");\r\n    }).catch(() => {\r\n      console.log(\"LOGOUT FAILED!\");\r\n    });\r\n}\r\n\r\n\r\nexport const updateUserInfo = async (userObj, userImageInfo) => {\r\n  const storage = firebaseStorage.getStorage();\r\n  const storageRef = firebaseStorage.ref(storage, `userimages/${userObj.uid}`);\r\n  const imageFile = userImageInfo;\r\n  let imageURL = null;\r\n\r\n  if (imageFile !== undefined) {\r\n    firebaseStorage.uploadBytes(storageRef, imageFile)\r\n    .then((snapshot) => {\r\n      console.log(\"upload image: \", snapshot);\r\n      firebaseStorage.getDownloadURL(storageRef);\r\n    });\r\n  }\r\n  \r\n  updateProfile(getAuth().currentUser, {\r\n    displayName: userObj.displayName,\r\n    photoURL: imageURL === undefined ? userObj.photoURL : imageURL\r\n  });\r\n}\r\n\r\n\r\nexport const sendUserEmailVerify = () => {\r\n  getAuth().languageCode = 'ko';\r\n  sendEmailVerification(getAuth().currentUser)\r\n    .then(() => {\r\n      console.log(\"EMAIL VERIFICATION SEND SUCCESS.\");\r\n    })\r\n    .catch(() => {\r\n      console.log(\"EMAIL VERIFICATION SEND FAILD.\");\r\n    });\r\n}\r\n\r\n\r\nexport const deleteUserInfo = () => {\r\n  deleteUser(getAuth().currentUser).then(() => {\r\n    console.log(\"DELETE USER SUCCESS.\");\r\n  }).catch(() => {\r\n    console.log(\"DELETE USER FAILED!\");\r\n  });\r\n}","<template> \r\n    <div class=\"container container-style\"> \r\n        <div class=\"row\">\r\n            <router-link :to=\"{ name: 'TodosList' }\" class=\"router-link-style\">\r\n                <h1 class=\"h1-style\">\r\n                    Coin Todos\r\n                </h1>\r\n            </router-link>\r\n            <div class=\"card card-style\">\r\n                <div class=\"container justify-content-center\">\r\n                    <div class=\"row\">\r\n                        <div class=\"form-floating mb-3\">\r\n                            <input \r\n                                v-model=\"userEmail\"\r\n                                type=\"email\" \r\n                                id=\"floatingEmail\" \r\n                                class=\"form-control\" \r\n                                placeholder=\"이메일\"\r\n                                required\r\n                            >\r\n                            <label for=\"floatingEmail\">\r\n                                이메일\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-floating mb-5\">\r\n                            <input \r\n                                v-model=\"userPassword\"\r\n                                type=\"password\" \r\n                                id=\"floatingPassword\" \r\n                                class=\"form-control\" \r\n                                placeholder=\"비밀번호\"\r\n                                required\r\n                            >\r\n                            <label for=\"floatingPassword\">\r\n                                비밀번호\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-grid\">\r\n                        <button @click=\"loginSubmit\" type=\"button\" class=\"btn btn-success btn-lg\">\r\n                            로그인\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"extra-style\">\r\n                <router-link to=\"/signup\">회원가입</router-link>\r\n                &nbsp;|&nbsp;\r\n                <router-link to=\"/\">비밀번호 찾기</router-link>\r\n            </div>\r\n            <div class=\"extra-style g-3\">\r\n              <router-link to=\"/\">메인 페이지로 돌아가기</router-link>\r\n            </div>\r\n        </div> \r\n    </div> \r\n</template> \r\n\r\n\r\n\r\n<script> \r\nimport { ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport router from '@/router';\r\n\r\nimport { authMessages } from '@/common/messages';\r\n\r\nimport { getUserInfo, triggerLogin } from '@/remote/auth';\r\n\r\n\r\nexport default { \r\n    name: 'LoginAuth',\r\n    \r\n    setup() {\r\n        const store = useStore();\r\n\r\n        const userEmail = ref('');\r\n        const userPassword = ref('');\r\n\r\n        const isLogin = () => {\r\n          const loginStatus = getUserInfo();\r\n\r\n          if (loginStatus) {\r\n            console.log(\"already login!\");\r\n            router.replace('/');\r\n          }\r\n        }\r\n        isLogin();\r\n\r\n        const loginSubmit = () => {\r\n          if (userEmail.value === '' || userPassword.value === '') {\r\n            store.dispatch('toast/triggerToast', authMessages.INVALID_USER_INFO);\r\n            return;\r\n          }\r\n\r\n          try {\r\n            triggerLogin(userEmail.value, userPassword.value);\r\n            router.replace('/');\r\n          } catch (error) {\r\n            console.log(error.message);\r\n            store.dispatch('toast/triggerToast', authMessages.INVALID_USER_INFO);\r\n          }\r\n        };\r\n\r\n        return {\r\n            userEmail,\r\n            userPassword,\r\n            \r\n            loginSubmit,\r\n        }\r\n    }\r\n}; \r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.container-style {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 75vh;\r\n}\r\n\r\n.router-link-style {\r\n    color: black;\r\n    text-decoration: none;\r\n}\r\n\r\n.h1-style {\r\n    text-align: center;\r\n    font-weight: 900;\r\n    margin-bottom: 50px;\r\n}\r\n\r\n.card-style {\r\n    padding: 50px 0px 50px 0px;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.btn-style {\r\n    width: auto !important;\r\n}\r\n\r\n.extra-style {\r\n    text-align: center;\r\n}\r\n\r\n.extra-style a {\r\n    text-decoration: none;\r\n    color: black;\r\n}\r\n\r\n.extra-style a:hover {\r\n    color: green;\r\n}\r\n</style>","import { render } from \"./LoginAuth.vue?vue&type=template&id=8312b396&scoped=true\"\nimport script from \"./LoginAuth.vue?vue&type=script&lang=js\"\nexport * from \"./LoginAuth.vue?vue&type=script&lang=js\"\n\nimport \"./LoginAuth.vue?vue&type=style&index=0&id=8312b396&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Others\\\\Programming\\\\Project Space\\\\vue-todo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8312b396\"]])\n\nexport default __exports__"],"names":["authMessages","SUCCESS_LOGOUT","message","type","SUCCESS_CREATE_USER_INFO","SUCCESS_UPDATE_USER_INFO","SUCCESS_SEND_USER_EMAIL_VERIFY","INVALID_ACCESS","INVALID_USER_INFO","INVALID_CREATE_USER_INFO","INVALID_UPLOAD_USER_IMAGE_INFO","FAILED_LOGOUT","FAILED_USER_INFO","FAILED_UPDATE_USER_INFO","FAILED_SEND_USER_EMAIL_VERIFY","FAILED_DELETE_USER_INFO","coinMessages","FAILED_COINS_INFO","todoMessages","SUCCESS_UPDATE_TODO_INFO","SUCCESS_DELETE_TODO_INFO","INVALID_TODO_INFO","INVALID_UPDATE_TODO_INFO","FAILED_TODO_INFO","FAILED_TODOS_INFO","FAILED_CREATE_TODO_INFO","FAILED_UPDATE_TODO_INFO","FAILED_DELETE_TODO_INFO","triggerLogin","userEmail","userPassword","signInWithEmailAndPassword","getAuth","then","console","log","catch","getUserInfo","currentUser","createUserInfo","createUserWithEmailAndPassword","signOutUserInfo","signOut","updateUserInfo","async","userObj","userImageInfo","storage","firebaseStorage","storageRef","uid","imageFile","imageURL","undefined","snapshot","updateProfile","displayName","photoURL","sendUserEmailVerify","languageCode","sendEmailVerification","deleteUserInfo","deleteUser","class","_createElementVNode","for","_createElementBlock","_createVNode","_component_router_link","to","name","_hoisted_3","$setup","$event","id","placeholder","required","_hoisted_8","_hoisted_10","onClick","setup","store","useStore","ref","isLogin","loginStatus","router","loginSubmit","value","error","dispatch","__exports__","render"],"sourceRoot":""}